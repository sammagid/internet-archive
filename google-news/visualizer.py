import os
import json

DATA_PATH = "/Users/sam/internet-archive/google-news/outputs/07-16-2025/07-16-2025_en-US_US_US-en_split.json"

def convert_to_markdown(filepath):
    """
    Converts a JSON output from googleNews.py into a nice markdown string.

    Args:
        filename (str): Name of JSON file to read from.
 
    Returns:
        str: Markdown formatted string displaying all headlines, questions, and answers.
    """
    # read json file in
    with open(filepath, "r", encoding="utf-8") as file:
        data = json.load(file)
    # initialize output string with title and description
    output = f"# Output from {filepath}\n"
    output += "\nThese are the top stories from Google News, along with the questions and answers generated by Perplexity (more AI clients coming soon).\n"
    # iterate over each headline
    for headline_obj in data:
        # add title with link
        title = headline_obj["headline"]
        outlet = headline_obj["news-outlet"]
        url = headline_obj["url"]
        output += f"\n## [{title} ({outlet})]({url})\n"
        # add questions and answers
        qas = headline_obj["questions"]
        for qa in qas:
            # parse the question dictionary
            question = qa["question"]
            answer = qa["answer"]
            citations = qa["citations"]
            # add to markdown string
            output += f"\n### {question}\n"
            output += f"\n{answer}\n"
            output += f"\nCitations: {", ".join(citations)}\n"
    return output

def main():
    # open json file and parse into md
    md = convert_to_markdown(DATA_PATH)
    # save to file
    file_out = f"{os.path.splitext(DATA_PATH)[0]}.md"
    with open(file_out, 'w') as file:
        file.write(md)

if __name__ == "__main__":
    main()